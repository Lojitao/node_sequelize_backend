version: '3'
services:
  # MySQL 服務
  mysql: # 服務名稱
    image: mysql:8.3.0
    container_name: mysql_container
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
    environment:
      NODE_ENV: production
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_LOWER_CASE_TABLE_NAMES: 0
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - web

  # Node.js 服務
  app: # 服務名稱
    build: .
    container_name: node_container
    ports:
      - "3039:3039"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules  # 保留容器內的 node_modules
    depends_on:
      - mysql
    environment:
      NODE_ENV: production
      DB_DATABASE: ${DB_DATABASE}
      DB_PASSWORD: ${DB_PASSWORD}
    command: sh -c "sleep 5 && npm start" 
    #command: npm start  # 在生產環境使用 node
    networks:
      - web

networks:
  web:
    #driver: bridge
    external: true  # 確保該網絡是外部的，以便 Nginx 可以與 Node.js 進行通信

